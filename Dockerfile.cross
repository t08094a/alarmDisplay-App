#########################
### build environment ###
#########################

FROM __BASEIMAGE_ARCH__/node:11-__NODE_TAG__ as builder

__CROSS_COPY qemu/qemu-__QEMU_ARCH__-static /usr/bin/qemu-__QEMU_ARCH__-static

WORKDIR /app

# make local @angular/cli binaries available
ENV PATH=${PATH}:./node_modules/@angular/cli/bin/

# install and cache app dependencies
COPY ["package.json", "yarn.lock", "/app/"]

RUN yarn install

# copy sources to app directory
COPY . .

# build the angular app in production mode and store the artifacts in dist folder
RUN ng --version
RUN yarn build --configuration=docker --progress --verbose


##################
### production ###
##################
FROM __BASEIMAGE_ARCH__/nginx:__NGINX_TAG__

__CROSS_COPY qemu/qemu-__QEMU_ARCH__-static /usr/bin/qemu-__QEMU_ARCH__-static

RUN apk add --no-cache bash 2>/dev/null || apt install bash 2>/dev/null

# copy script to replace config placeholders with docker environment ones
COPY replace_environment_configs.sh /
RUN chmod +x /replace_environment_configs.sh

# copy our default nginx config
COPY nginx/default.conf /etc/nginx/conf.d/

# remove default nginx website
RUN rm -rf /usr/share/nginx/html/*

# copy artifact build from the 'build stage'
COPY --from=builder /app/dist /usr/share/nginx/html

# expose port 80
EXPOSE 80

ENTRYPOINT [ "/replace_environment_configs.sh", "/usr/share/nginx/html/assets/app-config.json" ]

# run nginx
CMD ["nginx", "-g", "daemon off;"]
